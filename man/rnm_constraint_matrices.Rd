% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/torch_rnm_helper_functions.R
\name{rnm_constraint_matrices}
\alias{rnm_constraint_matrices}
\title{Based on the type of matrix, returns a list containing 1)mat_value, a matrix containing the 
starting values of the matrix parameters and 2)mat_free, a matrix of 1s and 0s which 
indicate which entries of the matrix are free parameters.}
\usage{
rnm_constraint_matrices(
  type = "lambda",
  omega_theta = "free",
  lambda = NULL,
  n_rows,
  n_cols,
  entries = NULL,
  identification = "variance"
)
}
\arguments{
\item{type}{string to indicate whether selected matrix is a "lambda", "omega_psi" or "theta" matrix}

\item{omega_theta}{indicate if omega_theta matrix return corresponds to constraints or free parameters}

\item{lambda}{design matrix for lambda if matrix type selected is "lambda"}

\item{n_rows}{number of rows of the selected matrix in the lnm model}

\item{n_cols}{number of columns of the selected matrix in the lnm model}

\item{entries}{(Optional) list containing 3 vectors which contain information about 
which parameters to fix. The first and second vector indicate the row and column of the 
parameter inside the selected matrix to be fixed. The last vector contains the prescribed value
for the parameter.}

\item{identification}{(Optional) method to identify the model, either by variance or by loadings (default "variance")}
}
\value{
list containing mat_value and mat_free
}
\description{
Example: rnm_constraint_matrices(type='psi',n_rows=3,n_cols = 3, entries=list(c(2),c(1),c(0.8)),identification = 'variance')
}
\details{
Output: $mat_value
        1      0    0
        0.8    1    0
        0.0    0    1
        $mat_free
        1    1    1
        0    1    1
        1    1    1

Explanation: The selected matrix is the 'psi' matrix with 3 rows and 3 columns.
The (2,1) entry is set to be 0.8 in mat_value. It is no longer free and so (2,1) entry
in mat_free will be a value of 0. Note that for symmetric matrices like psi,
if (i,j) entry is set to be fixed, then (j,i) entry will also be set to be fixed in the model, 
but the output of this function will not reflect that.
}
